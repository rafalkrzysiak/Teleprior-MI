function test_alpha_compute
% check alpha computation here first, this runs directly on experimental
% data

% calcluate distribution
% here we create the test/train scenario 
% use 26 randomly selected ids to create pdistr and xdistr and run it on 3
% remaining ones only
numSubjects=size(ID_Data,1);
idsall=randperm(numSubjects);

num_train=floor(0.9*numSubjects);

ids_train=ID_Data(idsall(1:num_train),:);
ids_test=ID_Data(idsall(num_train+1:numSubjects),:);

% tau should be param.tau but for that paramconfig should be called outside
% the for loop--can we do that?
% set tau 15 seconds for distance and 20 seconds for freezing -- SB
tau=30;
tau=15;
%     [pdstr, xdstr]=calc_pdf_feature(tau, ids_train);

% -- getting the values for the freeze time
dstr_freeze=extract_freezing_data(tau, ids_train, ...
            dtTrack, dtCommand); % distance
[p_frz, x_frz]=calc_pdf(dstr_freeze);

% load data
[xs, tf, tloc, file_id] = RobotExperimentDataSet('2241','2');

% calculate d
d = sqrt(sum((xs(1:2,2:end) - xs(1:2,1:end-1)).^2))';

% calculate alpha
alpha=ones(1,tf)*0.5;
tau=15*2; % since tau is in seconds but the one passed is in frames
for k=tau:tf-1
    [alpha(k+1), pDxMxT_k, pDyMyT_k] = ...
        UpdateAlpha(sum(d(k-tau+1:k)), Exp.p_dist, Exp.x_dist, alpha(k));
end
figure(1); gcf; clf;
subplot(1,2,1);
plot(Exp.x_dist,Exp.p_dist);
subplot(1,2,2);
plot(1:tf, alpha, 'linewidth', 2);
xlabel('frame');
ylabel('alpha');